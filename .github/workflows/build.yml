name: CD Pipeline

on: [push]

jobs:
  build-nix:
    env:
      IN_PIPELINE: true
    runs-on: ${{ matrix.os }}
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        type: [ubuntu-x64, ubuntu-x86, armv7, aarch64]
        include:
          - type: ubuntu-x64
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            name: x86_64-linux-bee2-rs
            path: target/x86_64-unknown-linux-musl/release/bee2-rs
            pkg_config_path: /usr/lib/x86_64-linux-gnu/pkgconfig
          - type: ubuntu-x86
            os: ubuntu-latest
            target: i686-unknown-linux-musl
            name: x86-linux-bee2-rs
            path: target/i686-unknown-linux-musl/release/bee2-rs
            pkg_config_path: /usr/lib/i686-linux-gnu/pkgconfig
          - type: armv7
            os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            name: armv7-bee2-rs
            path: target/armv7-unknown-linux-gnueabihf/release/bee2-rs
            pkg_config_path: /usr/lib/x86_64-linux-gnu/pkgconfig
          - type: aarch64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            name: aarch64-bee2-rs
            path: target/aarch64-unknown-linux-gnu/release/bee2-rs
            pkg_config_path: /usr/lib/x86_64-linux-gnu/pkgconfig
    steps:
      - uses: actions/checkout@v2
      - name: Install System Dependencies
        run: |
          env
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libssl-dev pkg-config gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        env:
          PKG_CONFIG_PATH: ${{ matrix.pkg_config_path }}
          OPENSSL_DIR: /usr/lib/ssl
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}
      - name: Strip symbols from binary
        run: |
          strip -s ${{ matrix.path }} || arm-linux-gnueabihf-strip -s ${{ matrix.path }} || aarch64-linux-gnu-strip -s ${{ matrix.path }}
      - name: Build tar.gz for homebrew installs
        if: matrix.type == 'ubuntu-x64'
        run: |
          tar czf ${{ matrix.name }}.tar.gz -C target/x86_64-unknown-linux-musl/release bee2-rs
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.path }}
      - uses: actions/upload-artifact@v2
        if: matrix.type == 'ubuntu-x64'
        with:
          name: ${{ matrix.name }}.tar.gz
          path: ${{ matrix.name }}.tar.gz

  build-deb:
    needs: [build-nix]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Deb Build
        uses: ebbflow-io/cargo-deb-amd64-ubuntu@1.0
      - name: Upload Deb Artifact
        uses: actions/upload-artifact@v2
        with:
          name: bee2-rs_amd64.deb
          path: ./target/x86_64-unknown-linux-musl/debian/*

  build-macos:
    env:
      IN_PIPELINE: true
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=x86_64-apple-darwin
      - name: Strip symbols from binary
        run: |
          strip -u -r target/x86_64-apple-darwin/release/bee2-rs
      - name: Build tar.gz for homebrew installs
        run: |
          tar czf x86_64-macos-bee2-rs.tar.gz -C target/x86_64-apple-darwin/release bee2-rs
      - uses: actions/upload-artifact@v2
        with:
          name: x86_64-macos-bee2-rs
          path: target/x86_64-apple-darwin/release/bee2-rs
      - uses: actions/upload-artifact@v2
        with:
          name: x86_64-macos-bee2-rs.tar.gz
          path: x86_64-macos-bee2-rs.tar.gz

  build-windows:
    env:
      IN_PIPELINE: true
    runs-on: ${{ matrix.os }}
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        type: [windows-x64, windows-x86]
        include:
          - type: windows-x64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            name: x86_64-windows-bee2-rs.exe
            path: target\x86_64-pc-windows-msvc\release\bee2-rs.exe
          - type: windows-x86
            os: windows-latest
            target: i686-pc-windows-msvc
            name: x86-windows-bee2-rs.exe
            path: target\i686-pc-windows-msvc\release\bee2-rs.exe
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.path }}
